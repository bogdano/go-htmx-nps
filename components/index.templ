package components

import (
	"go-htmx/api"
)

templ Index(parks []api.Park, placeName string, state string) {
	@DocType()
	@Head("National Parks Finder")
	@Body(pageIndex(parks, placeName, state))
}

templ pageIndex(parks []api.Park, placeName string, state string) {
	<div class="flex flex-col items-center mx-auto text-center">
		<h1 class="text-4xl md:text-5xl font-extrabold text-stone-700 pt-12 mb-8"><a href="/" hx-boost="false">Pick A Park</a></h1>
		<div id="geocoder" class="geocoder mb-8"></div>
	</div>

	<div id="parks-container" class="text-center">
		@Parks(parks, placeName, state)
	</div>

	<script>
	// Initialize Mapbox Geocoder
	initMapbox();
	function initMapbox() {
		mapboxgl.accessToken = "pk.eyJ1IjoiYm9nenoiLCJhIjoiY2x2MDU0NjBoMWwzYjJqbWpnazlpaGkzbiJ9.DbPQ3cgc-RxyA5vlEW0mdQ"
		let geocoderElement = document.getElementById('geocoder');
		geocoderElement.innerHTML = '';
		let geocoder = new MapboxGeocoder({
			accessToken: mapboxgl.accessToken,
			mapboxgl: mapboxgl,
			types: 'place',
			countries: 'us',
			placeholder: 'Where are you?',
		});
		
		geocoderElement.appendChild(geocoder.onAdd());
		geocoder.on('result', function(e) {
			let coords = e.result.geometry.coordinates;
			let placeNameParts = e.result.place_name.split(',');
			let placeName = placeNameParts[0];
			let state = placeNameParts[1].trim();
			let url = '/place/' + encodeURIComponent(placeName) + '/' + encodeURIComponent(state);
			// Use HTMX to send coordinates to the server and get parks
			htmx.ajax('GET', url, {
				values: {longitude: coords[0], latitude: coords[1]},
				target: '.htmx-body',
			});
		});
	}

	window.onload = function() {
    // Check if Geolocation is supported
    if (!navigator.geolocation) {
        console.log("Geolocation is not supported by this browser.");
        return;
		// else if path != /
    } else if (window.location.pathname != '/') {
		return;
	}

    // Get current position
    navigator.geolocation.getCurrentPosition(function(position) {
        let latitude = position.coords.latitude;
        let longitude = position.coords.longitude;

        // Use Mapbox Geocoding API to get place name
        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${longitude},${latitude}.json?types=place&countries=us&access_token=pk.eyJ1IjoiYm9nenoiLCJhIjoiY2x2MDU0NjBoMWwzYjJqbWpnazlpaGkzbiJ9.DbPQ3cgc-RxyA5vlEW0mdQ`)
            .then(response => response.json())
            .then(data => {
                let placeNameParts = data.features[0].place_name.split(',');
                let placeName = placeNameParts[0];
                let state = placeNameParts[1].trim();
                let url = '/place/' + encodeURIComponent(placeName) + '/' + encodeURIComponent(state);

                // Use HTMX to send coordinates to the server and get parks
                htmx.ajax('GET', url, {
                    values: {longitude: longitude, latitude: latitude},
                    target: '.htmx-body',
                });
            });
    });
}
	</script>
}

